name: Deploy Services

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AWS_ACCOUNT_DEV: "682352645723"
  AWS_ACCOUNT_STAGE: "682352645723"
  AWS_ACCOUNT_PROD: "682171097471"

jobs:
  deploy:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.3.7

    - name: Initialize Variables
      id: init-vars
      run: |
        service_name="${{ github.event.inputs.service_name }}"
        env_type="${{ github.event.inputs.env }}"
        aws_region="${{ github.event.inputs.aws_region }}"
        case "${env_type}" in
          "dev")
            case "${aws_region}" in
              "us-east-1")
                echo "tf_workspace=dev" >> $GITHUB_ENV
                ;;
              "ap-northeast-1")
                echo "tf_workspace=dev-apac" >> $GITHUB_ENV
                ;;
            esac
            echo "aws_account=$AWS_ACCOUNT_DEV" >> $GITHUB_ENV
            ;;
          "stage")
            case "${aws_region}" in
              "us-east-1")
                echo "tf_workspace=stage" >> $GITHUB_ENV
                ;;
              "ap-northeast-1")
                echo "tf_workspace=st-apac" >> $GITHUB_ENV
                ;;
            esac
            echo "aws_account=$AWS_ACCOUNT_STAGE" >> $GITHUB_ENV
            ;;
          "prod")
            case "${aws_region}" in
              "us-east-1")
                echo "tf_workspace=prod" >> $GITHUB_ENV
                ;;
              "ap-northeast-1")
                echo "tf_workspace=pr-apac" >> $GITHUB_ENV
                ;;
            esac
            echo "aws_account=$AWS_ACCOUNT_PROD" >> $GITHUB_ENV
            ;;
          *)
            echo "tf_workspace=dev" >> $GITHUB_ENV
            echo "aws_account=$AWS_ACCOUNT_DEV" >> $GITHUB_ENV
            ;;
        esac
        service_version="${{ github.event.inputs.service_version }}"
        echo "service_version=${service_version}" >> $GITHUB_ENV

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Add GitHub to known hosts
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts

    - name: Terraform Init and Plan
      run: |
        terraform -version
        terraform init -upgrade
        terraform workspace select ${{ env.tf_workspace }} || terraform workspace new ${{ env.tf_workspace }}
        terraform workspace show

      - name: Plan Terraform
        if: ${{ github.event.inputs.action == 'plan' }}
        uses: HawkEyeInnovations/GithubSharedWorkflows/.github/workflows/terraform-plan.yml@v0.0.41
        with:
          working_directory: ${{ github.event.inputs.project }}/${{ github.event.inputs.layer }}
          aws_region: ${{ github.event.inputs.aws_region }}
          aws_account_id: ${{ github.event.inputs.env == 'dev' && '682352645723' || github.event.inputs.env == 'prod' && '682171097471' || '682352645723' }}
          aws_role_session_name: gha-plan-baseball-infra
          var_file: ../${{ github.event.inputs.env }}.tfvars
          workspace: ${{ github.event.inputs.env }}
          create_workspace_if_not_exists: true
          run_checkov: true
          checkov_soft_fail: true
          run_tflint: true
          plan_options: ${{ github.event.inputs.action == 'destroy' && '-destroy -detailed-exitcode' || '' }}
        secrets: inherit
        continue-on-error: true

    - name: Approval
      if: success() && github.event_name == 'workflow_dispatch'
      run: echo "Waiting for approval to apply plan..."
      timeout-minutes: 60
apply:
  name: Deploy Environment
  if: ${{github.event_name == 'workflow_dispatch' && github.event.inputs.approval == 'true' }}
  uses: HawkEyeInnovations/GithubSharedWorkflows/.github/workflows/terraform-apply.yml@v0.0.41
  with:
    working_directory: ${{ github.event.inputs.project }}/${{ github.event.inputs.layer }}
    aws_region: ${{ github.event.inputs.aws_region }}
    aws_account_id: ${{ github.event.inputs.env == 'dev' && '682352645723' || github.event.inputs.env == 'prod' && '682171097471' || '682352645723' }}
    aws_role_session_name: gha-apply-baseball-infra
    var_file: ../${{ github.event.inputs.env }}.tfvars
    workspace: ${{ github.event.inputs.env }}
    auto_approve: true
  secrets: inherit

    - name: Slack Success Notification
      if: success()
      uses: slackapi/slack-github-action@v1.23.0
      with:
        channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
        text: "<<${{ github.event.inputs.service_name }}>> service was updated to version '${{ env.service_version }}' on ${{ env.tf_workspace }} environment in the ${{ github.event.inputs.aws_region }} region. See details on the job's output."

    - name: Slack Failure Notification
      if: failure()
      uses: slackapi/slack-github-action@v1.23.0
      with:
        channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
        text: "THE JOB FAILED TO UPDATE the <<${{ github.event.inputs.service_name }}>> service to version '${{ env.service_version }}' on ${{ env.tf_workspace }} environment in the ${{ github.event.inputs.aws_region }} region. See details on the job's output."
